/*
 * Copyright (c) 2022, 2024 Tracey Emery <tracey@openbsd.org>
 * Copyright (c) 2021 Limor Fried/Ladyada for Adafruit Industries, for typing
 *     most of the SI5351 registers and values
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _LIBSI5351_H
#define _LIBSI5351_H

struct env {
	uint8_t		 i2c_addr;
	uint8_t		 i2c_channel;
	uint32_t	 i2c_speed;
	i2c_inst_t	*i2c;

	bool		 initialized;
	uint32_t	 crystal_freq;
	uint16_t	 crystal_load;
	uint16_t	 phase;

	uint32_t	 f_multiplier;
	uint32_t	 f_numerator;
	uint32_t	 f_denominator;

	uint32_t	 m_divider;
	uint32_t	 m_numerator;
	uint32_t	 m_denominator;

	bool		 pll_a_configured;
	uint32_t	 pll_a_freq;

	bool		 pll_b_configured;
	uint32_t	 pll_b_freq;
};

enum I2C_t {
	I2C0,
	I2C1
};

/* change to what you want */
#define PICO_I2C0_SDA_PIN	 4
#define PICO_I2C0_SCL_PIN	 5
#define PICO_I2C1_SDA_PIN	 2
#define PICO_I2C1_SCL_PIN	 3

/* SI5351 addresses */
#define SI5351_ADDR_LOW		 0x60
#define SI5351_ADDR_HIGH	 0x61

/*
 * registers
 * https://cdn-shop.adafruit.com/datasheets/Si5351.pdf
 *
 * registers 26 - 41
 * https://www.skyworksinc.com/-/media/Skyworks/SL/documents/public/application-notes/AN619.pdf
 */

#define SI5351_CRYSTAL_LOAD_6PF	 (1 << 6)
#define SI5351_CRYSTAL_LOAD_8PF	 (2 << 6)
#define SI5351_CRYSTAL_LOAD_10PF (3 << 6)

#define SI5351_CRYSTAL_FREQ_25MHZ	 (25000000)
#define SI5351_CRYSTAL_FREQ_27MHZ	 (27000000)

#define SI5351_MULTISYNTH_DIV_4	 4
#define SI5351_MULTISYNTH_DIV_6	 6
#define SI5351_MULTISYNTH_DIV_8	 8

enum SI5351_PHASE_t {
	PHASE0,
	PHASE90,
	PHASE180,
	PHASE270
};

enum SI5351_OUTPUT_t {
	SI5351_OUTPUT_1,
	SI5351_OUTPUT_2,
	SI5351_OUTPUT_3
};

enum SI5351_PLL_t {
	SI5351_PLL_A,
	SI5351_PLL_B
};

enum SI5351_R_DIV_t {
	SI5351_R_DIV_1,
	SI5351_R_DIV_2,
	SI5351_R_DIV_4,
	SI5351_R_DIV_8,
	SI5351_R_DIV_16,
	SI5351_R_DIV_32,
	SI5351_R_DIV_64,
	SI5351_R_DIV_128
};

enum SI5351_REGISTER_t {
	SI5351_REGISTER_0_DEVICE_STATUS = 0,
	SI5351_REGISTER_1_INTERRUPT_STATUS_STICKY = 1,
	SI5351_REGISTER_2_INTERRUPT_STATUS_MASK = 2,
	SI5351_REGISTER_3_OUTPUT_ENABLE_CONTROL = 3,
	SI5351_REGISTER_9_OEB_PIN_ENABLE_CONTROL = 9,
	SI5351_REGISTER_15_PLL_INPUT_SOURCE = 15,
	SI5351_REGISTER_16_CLK0_CONTROL = 16,
	SI5351_REGISTER_17_CLK1_CONTROL = 17,
	SI5351_REGISTER_18_CLK2_CONTROL = 18,
	SI5351_REGISTER_19_CLK3_CONTROL = 19,
	SI5351_REGISTER_20_CLK4_CONTROL = 20,
	SI5351_REGISTER_21_CLK5_CONTROL = 21,
	SI5351_REGISTER_22_CLK6_CONTROL = 22,
	SI5351_REGISTER_23_CLK7_CONTROL = 23,
	SI5351_REGISTER_24_CLK3_0_DISABLE_STATE = 24,
	SI5351_REGISTER_25_CLK7_4_DISABLE_STATE = 25,
	SI5351_REGISTER_26_MSNA_P3_A_15_8 = 26,
	SI5351_REGISTER_27_MSNA_P3_A_7_0 = 27,
	SI5351_REGISTER_28_MSNA_P1_A_17_16 = 28,
	SI5351_REGISTER_29_MSNA_P1_A_15_8 = 29,
	SI5351_REGISTER_30_MSNA_P1_A_7_0 = 30,
	SI5351_REGISTER_31_MSNA_P32_A_19_16 = 31,
	SI5351_REGISTER_32_MSNA_P2_A_15_8 = 32,
	SI5351_REGISTER_33_MSNA_P2_A_7_0 = 33,
	SI5351_REGISTER_34_MSNA_P3_B_15_8 = 34,
	SI5351_REGISTER_35_MSNA_P3_B_7_0 = 35,
	SI5351_REGISTER_36_MSNA_P1_B_17_16 = 36,
	SI5351_REGISTER_37_MSNA_P1_B_15_8 = 37,
	SI5351_REGISTER_38_MSNA_P1_B_7_0 = 38,
	SI5351_REGISTER_39_MSNA_P32_B_19_16 = 39,
	SI5351_REGISTER_40_MSNA_P2_B_15_8 = 40,
	SI5351_REGISTER_41_MSNA_P2_B_7_0 = 41,
	SI5351_REGISTER_42_MULTISYNTH0_PARAMETERS_1 = 42,
	SI5351_REGISTER_43_MULTISYNTH0_PARAMETERS_2 = 43,
	SI5351_REGISTER_44_MULTISYNTH0_PARAMETERS_3 = 44,
	SI5351_REGISTER_45_MULTISYNTH0_PARAMETERS_4 = 45,
	SI5351_REGISTER_46_MULTISYNTH0_PARAMETERS_5 = 46,
	SI5351_REGISTER_47_MULTISYNTH0_PARAMETERS_6 = 47,
	SI5351_REGISTER_48_MULTISYNTH0_PARAMETERS_7 = 48,
	SI5351_REGISTER_49_MULTISYNTH0_PARAMETERS_8 = 49,
	SI5351_REGISTER_50_MULTISYNTH1_PARAMETERS_1 = 50,
	SI5351_REGISTER_51_MULTISYNTH1_PARAMETERS_2 = 51,
	SI5351_REGISTER_52_MULTISYNTH1_PARAMETERS_3 = 52,
	SI5351_REGISTER_53_MULTISYNTH1_PARAMETERS_4 = 53,
	SI5351_REGISTER_54_MULTISYNTH1_PARAMETERS_5 = 54,
	SI5351_REGISTER_55_MULTISYNTH1_PARAMETERS_6 = 55,
	SI5351_REGISTER_56_MULTISYNTH1_PARAMETERS_7 = 56,
	SI5351_REGISTER_57_MULTISYNTH1_PARAMETERS_8 = 57,
	SI5351_REGISTER_58_MULTISYNTH2_PARAMETERS_1 = 58,
	SI5351_REGISTER_59_MULTISYNTH2_PARAMETERS_2 = 59,
	SI5351_REGISTER_60_MULTISYNTH2_PARAMETERS_3 = 60,
	SI5351_REGISTER_61_MULTISYNTH2_PARAMETERS_4 = 61,
	SI5351_REGISTER_62_MULTISYNTH2_PARAMETERS_5 = 62,
	SI5351_REGISTER_63_MULTISYNTH2_PARAMETERS_6 = 63,
	SI5351_REGISTER_64_MULTISYNTH2_PARAMETERS_7 = 64,
	SI5351_REGISTER_65_MULTISYNTH2_PARAMETERS_8 = 65,
	SI5351_REGISTER_66_MULTISYNTH3_PARAMETERS_1 = 66,
	SI5351_REGISTER_67_MULTISYNTH3_PARAMETERS_2 = 67,
	SI5351_REGISTER_68_MULTISYNTH3_PARAMETERS_3 = 68,
	SI5351_REGISTER_69_MULTISYNTH3_PARAMETERS_4 = 69,
	SI5351_REGISTER_70_MULTISYNTH3_PARAMETERS_5 = 70,
	SI5351_REGISTER_71_MULTISYNTH3_PARAMETERS_6 = 71,
	SI5351_REGISTER_72_MULTISYNTH3_PARAMETERS_7 = 72,
	SI5351_REGISTER_73_MULTISYNTH3_PARAMETERS_8 = 73,
	SI5351_REGISTER_74_MULTISYNTH4_PARAMETERS_1 = 74,
	SI5351_REGISTER_75_MULTISYNTH4_PARAMETERS_2 = 75,
	SI5351_REGISTER_76_MULTISYNTH4_PARAMETERS_3 = 76,
	SI5351_REGISTER_77_MULTISYNTH4_PARAMETERS_4 = 77,
	SI5351_REGISTER_78_MULTISYNTH4_PARAMETERS_5 = 78,
	SI5351_REGISTER_79_MULTISYNTH4_PARAMETERS_6 = 79,
	SI5351_REGISTER_80_MULTISYNTH4_PARAMETERS_7 = 80,
	SI5351_REGISTER_81_MULTISYNTH4_PARAMETERS_8 = 81,
	SI5351_REGISTER_82_MULTISYNTH5_PARAMETERS_1 = 82,
	SI5351_REGISTER_83_MULTISYNTH5_PARAMETERS_2 = 83,
	SI5351_REGISTER_84_MULTISYNTH5_PARAMETERS_3 = 84,
	SI5351_REGISTER_85_MULTISYNTH5_PARAMETERS_4 = 85,
	SI5351_REGISTER_86_MULTISYNTH5_PARAMETERS_5 = 86,
	SI5351_REGISTER_87_MULTISYNTH5_PARAMETERS_6 = 87,
	SI5351_REGISTER_88_MULTISYNTH5_PARAMETERS_7 = 88,
	SI5351_REGISTER_89_MULTISYNTH5_PARAMETERS_8 = 89,
	SI5351_REGISTER_90_MULTISYNTH6_PARAMETERS = 90,
	SI5351_REGISTER_91_MULTISYNTH7_PARAMETERS = 91,
	SI5351_REGISTER_92_CLOCK_6_7_OUTPUT_DIVIDER = 92,
	SI5351_REGISTER_149_SPREAD_SPECTRUM_PARAMETERS = 149,
	SI5351_REGISTER_165_CLK0_INITIAL_PHASE_OFFSET = 165,
	SI5351_REGISTER_166_CLK1_INITIAL_PHASE_OFFSET = 166,
	SI5351_REGISTER_167_CLK2_INITIAL_PHASE_OFFSET = 167,
	SI5351_REGISTER_168_CLK3_INITIAL_PHASE_OFFSET = 168,
	SI5351_REGISTER_169_CLK4_INITIAL_PHASE_OFFSET = 169,
	SI5351_REGISTER_170_CLK5_INITIAL_PHASE_OFFSET = 170,
	SI5351_REGISTER_177_PLL_RESET = 177,
	SI5351_REGISTER_183_CRYSTAL_INTERNAL_LOAD_CAPACITANCE = 183
};

class
Si5351
{
	public:
		Si5351(struct env *);
		void setup_pll(struct env *, uint8_t);
		void setup_multisynth(struct env *, uint8_t, uint8_t);
		void setup_r_div(struct env *, uint8_t, uint8_t);
		void enable(struct env *);
		void disable(struct env *);
};

#endif // _LIBSI5351_H
